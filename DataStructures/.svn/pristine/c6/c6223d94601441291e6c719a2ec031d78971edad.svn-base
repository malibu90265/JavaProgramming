<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pjNeedsDao">

	<resultMap type="com.sqisoft.iqs.hr.vo.BudgetVO" id="budgetResultMap">
		<result property="team_id"		column="team_id" />
		<result property="pj_id"		column="pj_id" />
		<result property="pj_start_day" column="pj_start_day" />
		<result property="pj_end_day" 	column="pj_end_day" />
		<result property="pj_prog" 		column="pj_prog" />
		<result property="pj_require" 	column="pj_require" />
		<result property="pn_num" 		column="pn_num" />
		<result property="pj_loc" 		column="pj_loc" />
		<result property="emp_cnt" 		column="emp_cnt" />
	</resultMap>

	<select id="pj_SearchList" parameterType="hashMap"  resultType="com.sqisoft.iqs.hr.vo.BudgetVO">
		SELECT	t.team_id
				, t.team_name
				, p.pj_id
				, p.pj_require
				, SUBSTRING(b.pj_prog,2,2) as pj_prog
				, IFNULL(n.count,0) pn_num
				, p.pj_start_day
				, p.pj_end_day
				, location.e_area as pj_loc
				, cnt AS emp_cnt
				, cnt2 AS emp_cnt2
		FROM	project p
		<!--  장소 가져오기 위한 left join-->
		LEFT	JOIN (
						SELECT concat(a.name," ",b.name) as e_area, concat(b.contcd,"/",b.citycd,"/",b.gucd) as loc
						FROM area a,area b 
						WHERE a.citycd = b.citycd and a.gucd =0 and b.gucd!=0
					 ) as location 
		ON location.loc = p.pj_loc
		<!-- 투입 인원 가져오기 위한 left join-->
		LEFT	JOIN (
						SELECT		pj_id
									,count(name) as cnt
						FROM		pj_placement 
						WHERE		SYSDATE() BETWEEN pj_start_day AND pj_end_day
						<!-- WHERE		year(pj_end_day)>=year( SYSDATE())   -->
						GROUP	BY pj_id
					 ) as pjcnt 
				ON (p.pj_id=pjcnt.pj_id)
		<!-- 배치 인원 가져오기 위한 left join -->
		LEFT	JOIN (
						SELECT		pj_id
									,COUNT(name) AS cnt2
						FROM		pj_placement
						<!-- WHERE		SYSDATE() BETWEEN pj_start_day AND pj_end_day -->
						WHERE		SYSDATE() <![CDATA[>]]> pj_start_day
						GROUP	BY	pj_id
					) AS pjcnt2
				ON (p.pj_id=pjcnt.pj_id)
		<!--  소요 인원 가져오기 위한 left join-->
		LEFT	JOIN ( 
						SELECT	pj_id
								, COUNT(*) AS count 
						FROM	pjneeds 
						WHERE	pn_num <![CDATA[<>]]> 0 
						GROUP	BY pj_id
					) n
				ON(p.pj_id = n.pj_id)
				, budget b
				, team t
		WHERE	t.team_id = p.team_id
		AND		b.pj_id = p.pj_id
		<if test="pj_id != ''"> 
		AND		p.pj_id LIKE CONCAT('%',#{pj_id},'%')
		</if>
		<if test="team_id != 'al'"> 
		AND		t.team_id= #{team_id}
		</if>
		<if test="pj_prog != ''"> 
		AND		pj_prog= #{pj_prog}
		</if>
		GROUP	BY p.pj_id
		ORDER	BY t.team_id, p.pj_id, b.pj_prog
	</select>
	
	<select id="pj_Datail" parameterType="String"  resultType="com.sqisoft.iqs.hr.vo.BudgetVO">
	
		SELECT	p.pj_id
				, p.pj_require
				, IFNULL(n.count,0) pn_num
				, p.pj_start_day
				, p.pj_end_day
		FROM	project p
		<!--  소요 인원 가져오기 위한 left join-->
		LEFT	JOIN ( 
						SELECT	pj_id
								, COUNT(*) AS count 
						FROM	pjneeds 
						WHERE	pn_num <![CDATA[<>]]> 0 
						GROUP	BY pj_id
					) n
				ON(p.pj_id = n.pj_id)
				
		WHERE	p.pj_id = #{pj_id}
	</select>
	
	<select id="searchArea" parameterType="String"  resultType="String">
	
		SELECT	location.e_area as pj_loc
		FROM	project p
		<!--  장소 가져오기 위한 left join-->
		LEFT	JOIN (
						SELECT concat(a.name," ",b.name) as e_area, concat(b.contcd,"/",b.citycd,"/",b.gucd) as loc
						FROM area a,area b 
						WHERE a.citycd = b.citycd and a.gucd =0 and b.gucd!=0
					 ) as location 
		ON location.loc = p.pj_loc
		WHERE	p.pj_id = #{pj_id}
	</select>
	
	<select id="pjneeds_getPJ" parameterType="String" resultMap="budgetResultMap">
		SELECT	p.pj_id
				, p.pj_start_day
				, p.pj_end_day
				, p.pj_require
				, IFNULL(n.count,0) pn_num
				,location.e_area as pj_loc
		FROM	project p
		LEFT	JOIN	(	
							SELECT	pj_id
									, COUNT(*) AS count 
							FROM	pjneeds 
							WHERE	pn_num <![CDATA[<>]]> 0 
							GROUP	BY pj_id
						) n	
		ON(p.pj_id = n.pj_id)
		LEFT	JOIN	(
							SELECT	concat(a.name," ",b.name) as e_area
									, concat(b.contcd,"/",b.citycd,"/",b.gucd) as loc
							FROM	area a
									,area b
							WHERE	a.citycd = b.citycd 
							and		a.gucd =0 
							and		b.gucd!=0
						) as location	
		ON (location.loc = p.pj_loc)
		WHERE  p.pj_id= #{pj_id}
	</select>
	
	
	<select id="pjneeds_all" parameterType="String" resultType="com.sqisoft.iqs.hr.vo.PjNeedsVO">
		SELECT	pj_id
				, pn_num
				, pn_grade
				, pn_skill
				, pn_day_from
				, pn_day_to
				, pn_check
				, division
				, area
		FROM	pjneeds
		WHERE	pj_id=#{pj_id}
		AND		pn_num <![CDATA[<>]]> 0
	</select>
	
									
	<insert id="pjneeds_merge" parameterType="com.sqisoft.iqs.hr.vo.PjNeedsVO" >
		INSERT	INTO	pjneeds 	(	
										pj_id
										, pn_num
										, pn_grade
										, pn_skill
										, pn_day_from
										, pn_day_to
										, pn_etc
										, pn_check
										, division
										, area
									)
		VALUES						(	
										#{pj_id, jdbcType=VARCHAR}
										, #{pn_num, jdbcType=INTEGER}
										, #{pn_grade, jdbcType=VARCHAR}
										, #{pn_skill, jdbcType=VARCHAR}
										, #{pn_day_from, jdbcType=VARCHAR}
										, #{pn_day_to, jdbcType=VARCHAR}
										, #{pn_etc, jdbcType=VARCHAR}
										, #{pn_check, jdbcType=VARCHAR}
										, #{division, jdbcType=VARCHAR}
										, #{area, jdbcType=VARCHAR}
									)
		ON	DUPLICATE KEY 
		UPDATE
				pn_grade = 	#{pn_grade, jdbcType=VARCHAR}
							, pn_skill=#{pn_skill, jdbcType=VARCHAR}
							, pn_day_from=#{pn_day_from, jdbcType=VARCHAR}
							, pn_day_to=#{pn_day_to, jdbcType=VARCHAR}
							, pn_etc=#{pn_etc, jdbcType=VARCHAR}
							, pn_check=#{pn_check, jdbcType=VARCHAR}
							, division=#{division, jdbcType=VARCHAR}
							, area=#{area, jdbcType=VARCHAR}
	</insert>
	
	<delete id="pjneeds_resize"  parameterType="com.sqisoft.iqs.hr.vo.PjNeedsVO">
		DELETE
		FROM	pjneeds
		WHERE	pj_id=#{pj_id} 
		and		pn_num > #{pn_num, jdbcType=INTEGER}
	</delete>
	
</mapper>
