<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pjpostingDao">
	<resultMap id="pjpostResultMap" type="com.sqisoft.iqs.hr.vo.PjpostingVO">
		<result property="name"			column="name" />
		<result property="pj_prog"		column="PJ_PROG" />
		<result property="pj_id"		column="PJ_ID" />
		<result property="pj_start_day"	column="PJ_START_DAY" />
		<result property="pj_end_day"	column="PJ_END_DAY" />
		<result property="peoplenum"	column="PEOPLENUM" />
		<result property="special"		column="SPECIAL" />
		<result property="advanced"		column="ADVANCED" />
		<result property="intermidate"	column="INTERMIDATE" />
		<result property="beginner"		column="BEGINNER" />
		<result property="engineer"		column="ENGINEER" />
		<result property="name"			column="name" />
		<result property="division"		column="division" />
		<result property="position"		column="position" />
		<result property="area"			column="area" />
		<result property="e_area"		column="e_area" />
		<result property="hire_date"	column="hire_date" />
		<result property="cpid"			column="cpid" />
		<result property="cpendday"		column="cpendday" />
		<result property="apid"			column="apid" />
		<result property="apstartday"	column="apstartday" />
		<result property="apendday"		column="apendday" />
		<result property="use_skill"	column="use_skill" />
		<result property="ap_use_skill"	column="ap_use_skill" />
		<result property="grade"		column="grade" />
		<result property="salary"		column="salary" />
		<result property="envclass"		column="envclass" />
	</resultMap>

	<!-- 프로젝트별(좌측) 검색 -->
	<select id="pjposting_SearchList" parameterType="hashMap" resultMap="pjpostResultMap"> 
	SELECT	SUBSTRING(b.pj_prog,2,2) AS pj_prog
			, p.pj_id				AS pj_id
			, pj_start_day			AS pj_start_day
			, pj_end_day			AS pj_end_day
			, p.pj_require			as pj_require
			, location.e_area		as pj_loc
			, (count(n.pj_id)-1)	as peoplenum
	FROM	budget b
			, pjneeds n
			, project p
	LEFT	JOIN (	SELECT	concat(a.name," ",b.name) as e_area
							, concat(b.contcd,"/",b.citycd,"/",b.gucd) as loc
					FROM	area a
							,area b
					WHERE	a.citycd = b.citycd
					and		a.gucd =0 and b.gucd!=0
				) as location
	ON		location.loc = p.pj_loc\
	WHERE	p.pj_id = n.pj_id
	AND		p.pj_id = b.pj_id
	AND		b.pj_prog in ('4A급','3대기','2완료','1이월')
<!-- 		AND p.pj_end_day <![CDATA[>=]]> curdate() -->  		 <!-- 종료된 PJ기간의 PJ도 리스팅되도록 -->
	<if test="pj_prog != 'al'">
	AND		b.pj_prog=#{pj_prog}
	</if>
	<if test="pj_id != ''">
	AND		b.pj_id like concat ('%',#{pj_id},'%') 
	</if>
	<if test="pj_start_day != ''">
	AND		p.pj_start_day <![CDATA[>=]]> #{pj_start_day}
	</if>
	<if test="pj_end_day != ''">
	AND		p.pj_end_day <![CDATA[<=]]> #{pj_end_day} 
	</if>
	GROUP	BY pj_id
	ORDER	BY b.pj_prog
			, pj_id
	</select>
	
	
	<!-- 프로젝트 인력배치(인력소요) -->
	<select id="pjposting_getPJ" parameterType="String" resultMap="pjpostResultMap">
		SELECT	p.pj_id
				, p.pj_start_day
				, p.pj_end_day
				, arealoc.pj_loc2 AS pj_loc
				, n.*
		FROM	project p
				, pjneeds n
				,(	SELECT	DISTINCT pro.pj_id
							, pro.pj_loc
							, location.e_area AS pj_loc2 
					FROM	project pro
					LEFT	JOIN (	SELECT	concat(a.name," ",b.name) as e_area
											, concat(b.contcd,"/",b.citycd,"/",b.gucd) as loc
									FROM	area a
											, area b
									WHERE	a.citycd = b.citycd
									and		a.gucd =0 and b.gucd!=0
								) as location
					ON		location.loc = pro.pj_loc
				) as arealoc
		WHERE	p.pj_id = n.pj_id 
		AND		p.pj_id = #{pj_id} 
		AND		arealoc.pj_id=p.pj_id
	</select>
	
	<!-- 직원 여부 와  올해 입사자인지 체크(js)  -->
	<select id="pjposting_empCheck" parameterType="String" resultType="hashMap">
		SELECT	division
				, hire_date
		FROM	employee
		WHERE	name= #{name} 
	</select>
	
	<!-- 프로젝트 인력소요 기술환경 -->
	<select id="getPJSkillList" parameterType="String" resultType="String">
		SELECT	s.name
		FROM	pj_skill p
				, skillcode s
		WHERE	p.pj_id = #{pj_id} 
		AND		p.fieldcd = s.fieldcd 
		AND		p.groupcd = s.groupcd 
		AND		p.skillcd =s.skillcd
		ORDER	BY p.pj_id
				, p.fieldcd
				, p.groupcd
				, p.skillcd
	</select>
	
	<!-- 투입이력조회 팝업 --> 
	<select id="getPJHistory" parameterType="String" resultMap="pjpostResultMap">
		SELECT	e.name
				, SUBSTRING(e.position,2,3) as position
				, SUBSTRING(e.grade,2,3) as grade
				, p.pj_start_day
				, p.pj_end_day
				, e.salary
		FROM	employee e 
		INNER	JOIN pj_history p 
		ON		e.name=p.name 
		WHERE	p.pj_id= #{pj_id}
		ORDER	BY e.division DESC, e.position,p.name
	</select>
	
	<!-- 해당 프로젝트의 배치인원내역 리스트 (프로젝트 투입현황 및 배치예정)-->
	<!-- 현재 배치PJ or 배치예정 PJ -->
	<select id="pjposting_getEmp" parameterType="String" resultType="com.sqisoft.iqs.hr.vo.PjpostingVO">

<!-- 배치 ui바뀐후 쿼리 2015-03-24_ver -->
		SELECT DISTINCT e.name,
		 		  e.division, 
			    e.position,
			    e.grade, 
			    e.envclass,
          		e.skill,
			pj.pj_id as cpid, 
			    pj.pj_start_day as cpstartday,
			    pj.pj_end_day as cpendday, 
			    
			    arealoc.e_area
          FROM  employee e
         INNER JOIN(SELECT * FROM pj_history where 
                         ((pj_start_day <![CDATA[<=]]> CURDATE() and pj_end_day <![CDATA[>=]]> CURDATE())
                         or pj_start_day<![CDATA[>=]]>CURDATE())
                         and pj_id!="대기"
                         and pj_id=#{pj_id})as pj
        on pj.name=e.name,              
        (SELECT DISTINCT emp.name,emp.area,location.e_area 
  		 	FROM employee emp
  		 	LEFT JOIN (SELECT concat(a.name," ",b.name) as e_area, concat(b.contcd,"/",b.citycd,"/",b.gucd) as loc
                    FROM area a,area b 
                  	WHERE a.citycd = b.citycd and a.gucd =0 and b.gucd!=0) as location 
        ON location.loc = emp.area) as arealoc
 	    WHERE 
   	    arealoc.name=e.name
     	group by e.name
	    ORDER BY e.position, e.name,pj.pj_start_day desc
	</select>
	
	
	<!-- 투입기간 이 현재를 지난 사람 목록 조회 (=투입이력조회)-->
	<select id="pjposting_getEmpPast" parameterType="String" resultType="com.sqisoft.iqs.hr.vo.PjpostingVO">
		SELECT	DISTINCT e.name
				, e.division
				, e.position
				, e.grade
				, e.envclass
				, e.skill
				, pj.pj_id as cpid
				, pj.pj_start_day as cpstartday
				, pj.pj_end_day as cpendday
				, arealoc.e_area
		FROM	employee e
		INNER	JOIN	(	SELECT	*
							FROM	pj_history
							where	pj_end_day<![CDATA[<]]>CURDATE()
							and		pj_id!="대기"
							and		pj_id=#{pj_id}
						)as pj
		on		pj.name=e.name
				,(	SELECT	DISTINCT emp.name
							,emp.area
							,location.e_area
					FROM	employee emp
					LEFT	JOIN	(	SELECT	concat(a.name," ",b.name) as e_area
												, concat(b.contcd,"/",b.citycd,"/",b.gucd) as loc
										FROM	area a
												,area b
										WHERE	a.citycd = b.citycd
										and		a.gucd =0 and b.gucd!=0
									) as location
				ON	location.loc = emp.area
				) as arealoc
		WHERE	arealoc.name=e.name
		group	by e.name
		ORDER	BY e.position
				, e.name
				,pj.pj_start_day desc
	</select>
	
	<!-- 인력 보유기술 (현재사용기술 x라서 사용 x )-->
	<select id="getEmpSkillList" parameterType="Integer" resultType="String">
		SELECT	s.name
		FROM	userskill u
				, skillcode s
		WHERE	u.empname = #{empname}
		AND		u.fieldcd = s.fieldcd
		AND		u.groupcd = s.groupcd 
		AND		u.skillcd = s.skillcd
		ORDER	BY u.empname
				, u.fieldcd
				, u.groupcd
				, u.skillcd
	</select>

	<!--배치수정시 update -->
	<update id="pjposting_Update" parameterType="com.sqisoft.iqs.pf.vo.PjHistoryVO">
		UPDATE	pj_history
		SET		pj_start_day = #{pj_start_day}
				, pj_end_day = #{pj_end_day}
		WHERE	name = #{name}
		and		pj_id=#{pj_id}
		AND		pj_end_day = (	SELECT	*
								FROM	(	SELECT	MAX(pj_end_day)
											FROM pj_history
											WHERE pj_id = #{pj_id}  AND name = #{name} 
										) ph
							)
	</update>
	
	<!--배치저장시 insert -->
	<insert id="pjposting_Insert" parameterType="com.sqisoft.iqs.pf.vo.PjHistoryVO">
		INSERT	INTO	pj_history	(	pj_id,name
										,pj_start_day
										,pj_end_day
									)
				VALUES				(	#{pj_id}
										,#{name}
										,#{pj_start_day}
										,#{pj_end_day}
									)
	</insert>
	
	
	<!--배치 취소시 pj_history 에서 삭제 -->
	<delete id="pjposting_delete" parameterType="map">
		DELETE	
		FROM	pj_history
		Where	name=#{name}
		AND		pj_id=#{pj_id}
		AND		pj_start_day=#{pj_start_day}
		AND		pj_end_day=#{pj_end_day} 
	</delete>
	
	<!--퇴사일 이후 프로젝트 삭제  -->
	<delete id="quithistoryDelete" parameterType="hashMap">
		DELETE
		FROM	pj_history
		Where	name=#{name}
		AND		pj_start_day<![CDATA[>=]]>#{quit_date}  
	</delete>
	
	<!--퇴사일보다 더 진행되는 pj 퇴사일로 pjendday setting  -->
	<update id="quitUpdate" parameterType="hashMap">
		UPDATE	pj_history
		SET		pj_end_day = #{quit_date}
		WHERE	name = #{name} 
		AND		pj_end_day <![CDATA[>]]> #{quit_date}
	</update>
	
	
	<!-- (pj_history) pj_id='대기' setting 위한 올해 입사자 -->
	<select id="getHireDateByYear" parameterType="String" resultType="String">
	
		SELECT hire_date 
		FROM employee 
		WHERE name = #{name} AND YEAR(hire_date) = YEAR(curdate());
		
	</select>
	
	
	
	<!-- (pj_history) pj_id='대기' setting 위한 올해 퇴사자 -->
	<select id="getQuitDateByYear" parameterType="String" resultType="String">
	
		SELECT quit_date
		FROM employee 
		WHERE name = #{name} AND YEAR(quit_date) = YEAR(curdate());
		
	</select>
	
	
	
	
	<select id="getCpstartday" parameterType="String" resultType="String">
	
		SELECT cpstartday
		FROM mpplace
		WHERE name = #{name}
		
	</select>
	
	<!-- 배치 대상자 List -->
	<select id="getNoPlaceEmpList" resultType="com.sqisoft.iqs.hr.vo.Employee_VO">
		SELECT	e.*
				,arealoc.e_area
		FROM	employee e
				, pj_history p
				,(	SELECT	DISTINCT emp.name
							,emp.area
							,location.e_area
					FROM	employee emp
					LEFT	JOIN (	SELECT	concat(a.name," ",b.name) as e_area
											, concat(b.contcd,"/",b.citycd,"/",b.gucd) as loc
									FROM	area a
											,area b
									WHERE	a.citycd = b.citycd
									and		a.gucd =0
									and		b.gucd!=0
								) as location
					ON		location.loc = emp.area
				) as arealoc
		WHERE	e.name = p.name
		AND		p.pj_id="대기"
		AND		p.pj_start_day <![CDATA[<=]]> curdate()
		and		DATE_FORMAT(p.pj_end_day,"%Y-%m-%d")<![CDATA[=]]>"2015-12-31"
		AND		arealoc.name=e.name
		AND		e.division = "직원" 
		AND		(e.quit_date IS NULL OR e.quit_date IS NULL OR e.quit_date = '0000-00-00' OR e.quit_date <![CDATA[>]]> curdate())
		ORDER	BY e.grade,e.position,e.name
	</select>
	
	<!-- 인원검색(외주 중심) 팝업 -->
	<!--
	검색 조건 : 현재 ~ 12월 31일까지 대기인 사람은 검색되지 않음 
	프로젝트 투입 현황, 배치 대상자 에 출력 되는 사람은 가져오지만 java단에서 출력 막음 
	appj란 배치 예정 프로젝트에 대한 정보 이고 pj는 현재 프로젝트에 관한 정보  
	-->
	<select id="emppjposting_Search" parameterType="com.sqisoft.iqs.hr.vo.SkillVO" resultType="com.sqisoft.iqs.hr.vo.Employee_VO">
		SELECT	e.name
				, e.position
				, e.grade
				, e.division
				, e.area
				, arealoc.e_area
				, e.etc
				, pj.pj_id as cpid
				, pj.pj_start_day as cpstartday
				, pj.pj_end_day as cpendday
				, appj.pj_id as apid
				, appj.pj_start_day as apstartday
				, appj.pj_end_day as apendday
				, skill2.skill_name
		FROM	employee e
		LEFT	outer	JOIN (	SELECT	*
								FROM	pj_history
								where	pj_start_day <![CDATA[>]]> CURDATE()
								order	by pj_start_day
							)as appj
		ON		appj.name=e.name
		LEFT	outer	JOIN (	SELECT	*
								FROM	pj_history
								where	pj_start_day <![CDATA[<=]]> CURDATE()
								and		pj_end_day<![CDATA[>=]]>CURDATE()
							)as pj
		ON		pj.name=e.name
				, (	SELECT	DISTINCT em.name
							, skl.skill_name
							, skl.sksk
					FROM	employee em
					LEFT	JOIN (	SELECT	u.empname as nm
											, concat(u.fieldcd,"/",u.groupcd,"/",u.skillcd)as sksk
											, group_concat(s.name) as skill_name
									FROM	userskill u
											, skillcode s
									WHERE	u.fieldcd = '1'
									AND		u.groupcd =s.groupcd
									AND		u.skillcd=s.skillcd
									GROUP	BY u.empname
								)as skl
					ON		em.name=skl.nm
				 ) as skill2
				, (	SELECT	DISTINCT emp.name
							,emp.area
							,location.e_area
					FROM	employee emp
					LEFT	JOIN (	SELECT	concat(a.name," ",b.name) as e_area
											, concat(b.contcd,"/",b.citycd,"/",b.gucd) as loc
									FROM	area a
											,area b
									WHERE	a.citycd = b.citycd
									and		a.gucd =0 and b.gucd!=0
								 ) as location
					ON		location.loc = emp.area
				 ) as arealoc
		WHERE	skill2.name = e.name
		AND		arealoc.name=e.name
		AND		(e.quit_date = '0000-00-00' OR e.quit_date is null OR e.quit_date = null OR e.division = "외주") 
		<!--외주인 경우 대기정보가 없거나 , 프로젝트가 내년 중반까지 하여 대기가 내년 중반 이후인 사람 등 모두 가져오게 하는 4줄 and 문 -->
		and		(	(appj.pj_id="대기"
					and	DATE_FORMAT(appj.pj_end_day,'%Y-%m-%d')<![CDATA[>=]]>"2015-12-31" 
					and	appj.pj_start_day<![CDATA[=]]>date_add(pj.pj_end_day, interval +1 day)
				) 
		or		appj.pj_id!="대기" or appj.pj_id is null
		or		(	DATE_FORMAT(pj.pj_start_day,'%Y-%m-%d')<![CDATA[=]]>"2015-01-01"
					and	DATE_FORMAT(pj.pj_end_day,'%Y-%m-%d')<![CDATA[=]]>"2015-12-31")
				)
		<if test = "name != ''">
		AND		e.name LIKE CONCAT('%',#{name},'%')
		</if>
		<if test= "division !='al'">
		AND		e.division = #{division}
		</if>
		<if test = "grade !='al'">
		AND		e.grade = #{grade}
		</if>  
		<if test = "groupcd !=null and groupcd !=''">
		AND		skill2.sksk =#{skillcd}
		</if>
		<if test = "area != ''">
		AND		e.area = #{area}
		</if>
		<if test = "endday != ''">
		AND		(	(DATE_FORMAT(appj.pj_start_day,'%Y-%m-%d')<![CDATA[<=]]>#{endday}
					AND	DATE_FORMAT(appj.pj_end_day,'%Y-%m-%d')<![CDATA[>=]]>#{endday}
					AND	appj.pj_id="대기"
				)
		or		(	DATE_FORMAT(pj.pj_start_day,'%Y-%m-%d')<![CDATA[<=]]>#{endday}
					AND	DATE_FORMAT(pj.pj_end_day,'%Y-%m-%d')<![CDATA[>=]]>#{endday}
					AND	pj.pj_id="대기")
				)
		</if>
		GROUP	BY name
		ORDER	BY e.division desc
				,e.position
				, e.grade
				, e.name 
	</select>


	<resultMap id="employeeListMapByName" type="com.sqisoft.iqs.hr.vo.Employee_VO">
		<result property="name" 		column="name" />
		<result property="position" 	column="position" />
		<result property="grade" 		column="grade" />
		<result property="salary" 		column="salary" />
		<result property="team_id" 		column="team_id" />
		<result property="area" 		column="area" />
		<result property="hire_date" 	column="hire_date" />
		<result property="quit_date" 	column="quit_date" />
		<result property="career_date" 	column="career_date" />
		<result property="division" 	column="division" />
		<result property="photo" 		column="photo" />
		<result property="email" 		column="email" />
		<result property="modify_user" 	column="modify_user" />
		<result property="systime" 		column="systime" />
		<result property="envclass" 	column="envclass" />
		<result property="skill" 		column="skill" />
		<result property="company" 		column="company" />
		<result property="phonenum" 	column="phonenum" />
		<result property="time_off" 	column="time_off" />
		<result property="to_start_day" column="to_start_day" />
		<result property="to_end_day" 	column="to_end_day" />
	</resultMap>

	<!--
		전체 직원의 리스트를 가져온다. 단 검색 조건이 맞는 사용자를 가져온다.
		예를 들어 홍길동%의 경우 List  = { 홍길동, 홍길동A}를 가져온다. 
	 -->
	<select id="employeeList" parameterType="string" resultMap="employeeListMapByName">
		SELECT	name
			, position
			, grade
			, salary
			, team_id
			, area
			, hire_date
			, quit_date
			, career_date
			, division
			, photo, email
			, modify_user
			, systime
			, envclass
			, skill
			, company
			, phonenum
			, time_off
			, to_start_day
			, to_end_day 
			FROM	employee
			WHERE	name like concat ('%',#{name},'%')
	</select>
	
	<resultMap id="pjIntersecDurbyMap" type="com.sqisoft.iqs.hr.vo.PjpostingVO">
		<result property="pj_id" 	column="pj_id" />
	</resultMap>
	<select id="pjIntersecDur" parameterType="map" resultMap="pjIntersecDurbyMap">
		SELECT	pj_id
		FROM	pj_history
		WHERE	name = #{name}
		AND		pj_start_day	<![CDATA[<=]]>	#{endDate}
		AND		pj_end_day		<![CDATA[>=]]>	#{startDate}
	</select>
	
</mapper>