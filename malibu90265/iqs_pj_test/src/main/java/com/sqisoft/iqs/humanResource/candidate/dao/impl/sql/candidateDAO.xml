<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
							"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="candidateDAO">

	<resultMap type="com.sqisoft.iqs.hr.vo.TestVO" id="testVO">
		<result property="area"				column="area" />
		<result property="name"				column="name" />
		<result property="division"			column="division" />
		<result property="envclass"			column="envclass" />
		<result property="grade"			column="grade" />
		<result property="skill"			column="skill" />
		<result property="pjId"				column="pj_id" />
		<result property="personalStart"	column="pj_start_day" />
		<result property="personalEnd"		column="pj_end_day" />
	</resultMap>

	<resultMap type="com.sqisoft.iqs.hr.vo.ConditionVO" id="conditionVO">
		<result property="cv_number"	column="pn_num" />
		<result property="cv_grade"		column="pn_grade" />
		<result property="cv_skill"		column="pn_skill" />
		<result property="cv_pjStart"	column="pn_day_from" />
		<result property="cv_pjEnd"		column="pn_day_to" />
		<result property="cv_area"		column="area" />
		<result property="cv_division"	column="division" />
	</resultMap>

	<resultMap type="com.sqisoft.iqs.humanResource.candidate.vo.CandidateVO" id="candidateVO">
		<result property="pj_id"				column="pj_id" />
		<result property="pj_name"				column="pj_name" />
		<result property="tm_id"				column="tm_id" />
		<result property="pj_status"			column="pj_status" />
		<result property="pj_sign_client"		column="pj_sign_client" />
		<result property="pj_order_client"		column="pj_order_client" />
		<result property="pj_amount"			column="pj_amount" />
		<result property="pj_start_date"		column="pj_start_date" />
		<result property="pj_end_date"			column="pj_end_date" />
		<result property="pj_stage"				column="pj_stage" />
		<result property="pj_propose_date"		column="pj_propose_date" />
		<result property="pj_contract_date"		column="pj_contract_date" />
		<result property="pj_pm"				column="pj_pm" />
		<result property="pj_loc"				column="pj_loc" />
		<result property="pj_cwm_env"			column="pj_cwm_env" />
		<result property="pj_os"				column="pj_os" />
		<result property="pj_DB"				column="pj_DB" />
		<result property="pj_ui"				column="pj_ui" />
		<result property="pj_lang"				column="pj_lang" />
		<result property="pj_fw"				column="pj_fw" />
		<result property="pj_mw"				column="pj_mw" />
		<result property="pj_req_num"			column="pj_req_num" />
		<result property="pj_put_num"			column="pj_put_num" />
		<result property="pj_sales"				column="pj_sales" />
		<result property="pj_matl_cost"			column="pj_matl_cost" />
		<result property="pj_outsrc_cost"		column="pj_outsrc_cost" />
		<result property="pj_extra_cost"		column="pj_extra_cost" />
		<result property="pj_sqi_mm"			column="pj_sqi_mm" />
		<result property="pj_out_mm"			column="pj_out_mm" />
		<result property="pr_sq"				column="pr_sq" />
		<result property="pr_grade"				column="pr_grade" />
		<result property="pr_job_skill"			column="pr_job_skill" />
		<result property="pr_start_date"		column="pr_start_date" />
		<result property="pr_end_date"			column="pr_end_date" />
		<result property="pr_uprice"			column="pr_uprice" />
		<result property="pr_name"				column="pr_name" />
		<result property="emp_cnt"				column="emp_cnt" />
		<result property="hr_company"			column="hr_company" />
		<result property="pd_end_date"			column="pd_end_date" />
		<result property="hr_name"				column="hr_name" />
		<result property="hr_cwm_env"			column="hr_cwm_env" />
		<result property="hr_grade"				column="hr_grade" />
		<result property="hr_job_skill"			column="hr_job_skill" />
		<result property="hr_residence"			column="hr_residence" />
		<result property="tm_name"				column="tm_name" />
	</resultMap>
	
	<select id="getTeamNames" resultMap="candidateVO">
		SELECT	tm_id
				, tm_name
		FROM	team 
		WHERE	tm_year = year(SYSDATE())
	</select>

	<!-- project list -->
	<select id="getProjectList" parameterType="string" resultMap="candidateVO">
		SELECT pr.pj_id
			 , count(pr.pj_id) as emp_cnt
		FROM pj_required pr
			 , project p
		WHERE p.tm_id = #{tm_id}
		AND p.pj_id = pr.pj_id
		GROUP	BY pr.pj_id;
	</select>

<!-- project detail list -->
	<select id="getCandidateConditionList" resultMap="candidateVO">    	
		SELECT	a.pj_id
				,a.pr_sq
				,a.pr_grade
				,a.pr_job_skill
				,a.pr_start_date
				,a.pr_end_date
				,a.pr_name
				,c.pj_loc
				,CASE 
					WHEN hr_company LIKE '%SQI%' THEN '직원'
					ELSE '외주'
					END AS hr_company
		FROM	pj_required a
		LEFT	OUTER JOIN human_resource b
		ON		a.pr_name = b.hr_name
		INNER	JOIN project c
		ON		a.pj_id = c.pj_id   
		WHERE	a.pj_id = #{pjId}  
	</select>
	
	<!-- project detail Click list -->
	<select id="getCandidateDetailClickList" resultMap="candidateVO">    	
		SELECT	h.hr_name
				,CASE 
					WHEN hr_company LIKE '%SQI%' THEN '직원'
					ELSE '외주'
					END AS hr_company
				,h.hr_cwm_env
				,h.hr_grade
				,h.hr_job_skill
				,p.pj_id
				,p.pd_end_date
				,h.hr_residence
		FROM	human_resource h
		LEFT	OUTER JOIN pj_deploy p
		ON		h.hr_name = p.pd_name
		WHERE	SUBSTRING(h.hr_grade,2) = #{grade}
	</select>


	<!-- 
	endDay < 직원의 pj 시작하는 날 
	직원의 pj 끝나는 날 < startDay 0
	-->
	<select id="test_VO1" parameterType="map" resultMap="testVO">
		SELECT	e.name
				, division
				, envclass
				, grade
				, skill
				, area
				, p.pj_id
				, pj_start_day
				, pj_end_day
		FROM	employee e
				, pj_placement p
		WHERE	e.name = p.name
		<if test=" startDay != null and startDay != '' ">
		AND		(
					team_id = '1S' 
					OR team_id = '2S'
					OR team_id = '3E'
					OR team_id = '4N'
					OR team_id = '5D'
				)
		AND		(
					(division = '직원' AND quit_date IS NULL)
					OR
					(division='외주')
				)	
		</if>
		<if test="division != null and division != ''">  
		AND		division = #{division}
		</if>
		<if test="skill != null and skill != ''">  
		AND		skill = #{skill}
		</if>
		<if test="grade != null and grade != ''">  
		AND		grade LIKE #{grade}
		</if>
		<if test="area != null and area != ''">  
		AND		area = #{area}
		</if>
		ORDER	BY e.name
	</select>

	<select id="test_VO2" parameterType="map" resultMap="testVO">
		SELECT	e.name
				, division
				, envclass
				, grade
				, skill
				, p.pj_id
				, area
				, MAX(pj_start_day)
				, MAX(pj_end_day)
		FROM 	employee e
				, pj_placement p
		WHERE 	e.name = p.name
		<if test=" pjDay != null  and pjDay != '' ">
		AND		p.pj_start_day <![CDATA[<=]]>#{startDay}
		AND		p.pj_end_day <![CDATA[>=]]>#{EndDay}
		</if>
		<if test=" division != null and division != '' ">
		AND		division != #{division}
		</if>
		<if test=" skill != null and skill != '' ">
		AND		skill != #{skill}
		</if>
		<if test=" grade != null and grade != '' ">
		AND		grade != #{grade}
		</if>
		<if test=" area != null and area != '' ">
		AND		area != #{area}
		</if>
		GROUP	BY e.name
	</select>
	
	
	<select id="allPjDayList" resultMap="testVO">
		SELECT	e.name
				, division
				, envclass
				, grade
				, skill
				, area
				, p.pj_id
				, pj_start_day
				, pj_end_day
		FROM	employee e
				, pj_placement p
		WHERE	e.name = p.name
		AND		(
					team_id = '1S' 
					OR team_id = '2S'
					OR team_id = '3E'
					OR team_id = '4N'
					OR team_id = '5D'
				)
		AND		(
					(division = '직원' AND quit_date IS NULL)
					OR
					(division='외주')
				)	
		ORDER	BY e.name
	</select>
	
	<select id="noHistoryPjDayList" resultMap="testVO">
		SELECT  e.name
				, division
				, envclass
				, grade
				, skill
				, area
				, pj_id
				, pj_start_day
				, pj_end_day
		FROM	employee e 
		LEFT	JOIN pj_placement p
		ON		e.name = p.name
		WHERE	p.name IS NULL
	</select>
	
	<select id="maxPjEndDayList" resultMap="testVO">
		SELECT	e.name
				, division
				, envclass
				, grade
				, skill
				, area
				, p.pj_id
				, pj_start_day
				, MAX(pj_end_day) pj_end_day
		FROM	employee e
				, pj_placement p
		WHERE	e.name = p.name
		AND		(
					team_id = '1S' 
					OR team_id = '2S'
					OR team_id = '3E'
					OR team_id = '4N'
					OR team_id = '5D'
				)
		AND		(
					(division = '직원' AND quit_date IS NULL)
					OR
					(division='외주')
				)	
		GROUP	BY e.name
	</select>
	
	<!-- 0922이욱진 추가 -->
	<select id="getWholeHumanResourceOnCandidate" resultMap="candidateVO">
		SELECT
			h.hr_name, 
			CASE
				WHEN
					hr_company LIKE '%SQI%'
						THEN '직원'
						ELSE '외주'
				END
			AS hr_company,
			h.hr_cwm_env,
			hr_grade,
			IFNULL(
				h.hr_job_skill, ' '
			)
			AS	hr_job_skill,
			IFNULL(
				p.pj_id, ' '
			)
			AS	pj_id,
			IFNULL(
				MAX(p.pd_end_date), ' '
			)
			AS	pd_end_date,
			h.hr_residence
		FROM
			human_resource h 
			LEFT JOIN pj_deploy p
				ON h.hr_name = p.pd_name
		GROUP
		BY	h.hr_name
	</select>
	
	<update id="insertRequireOnCandidate" parameterType="map">
		UPDATE
			pj_required
		SET
			pr_name = #{pr_name}
		WHERE
			pj_id = #{pj_id}
		AND	pr_sq = #{pr_sq}
	</update>
	
</mapper>