<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="teamDAO">
	<resultMap 	id="teamMap" 				type="com.sqisoft.iqs.pf.vo.TeamVO">
		<result property="team_id"			column="TEAM_ID" />
		<result property="team_name"		column="TEAM_NAME" />
		<result property="team_contract"	column="TEAM_CONTRACT" />
		<result property="team_profit_loss"	column="TEAM_PROFIT_LOSS" />
		<result property="team_income"		column="TEAM_INCOME" />
		<result property="team_product"		column="TEAM_PRODUCT" />
		<result property="team_outsource"	column="TEAM_OUTSOURCE" />
		<result property="team_perofcost"	column="TEAM_PEROFCOST" />
		<result property="team_mm"			column="TEAM_MM" />
		<result property="team_mem"			column="TEAM_MEM" />
		<result property="team_comm"		column="TEAM_COMM" />
		<result property="team_normal_cost"	column="team_normal_cost" />
	</resultMap>

	<resultMap	id="budgetMap"						type="com.sqisoft.iqs.pf.vo.BudgetVO">
		<result property="pj_id"					column="PJ_ID" />
		<result property="budget_product_cost"		column="BUDGET_PRODUCT_COST" />
		<result property="budget_contract_sales"	column="BUDGET_CONTRACT_SALES" />
		<result property="team_id"					column="TEAM_ID" />
		<result property="pj_operate"				column="PJ_OPERATE" />
		<result property="pj_prog"					column="PJ_PROG" />
		<result property="pj_extra_cost"			column="PJ_EXTRA_COST" />
		<result property="pj_name"					column="PJ_NAME" />
		<result property="pj_start_day"				column="PJ_START_DAY" />
		<result property="pj_end_day"				column="PJ_END_DAY" />
		<result property="budget_outsource_cost"	column="BUDGET_OUTSOURCE" />
	</resultMap>

	<resultMap	id="pjHistoryMap"			type="com.sqisoft.iqs.pf.vo.PjHistoryVO">
		<result property="team_id"			column="team_id" />
		<result property="pj_id"			column="PJ_ID" />
		<result property="name"				column="name" />
		<result property="division"			column="division" />
		<result property="use_skill"		column="use_skill" />
		<result property="mm"				column="mm" />
		<result property="salary"			column="salary" />
		<result property="month_unit_cost"	column="month_unit_cost" />
	</resultMap>


	<resultMap	id="emplMap"			type="com.sqisoft.iqs.pf.vo.EmplVO">
		<result property="empl_id"		column="EMPL_ID" />
		<result property="team_id"		column="TEAM_ID" />
		<result property="pj_id"		column="PJ_ID" />
		<result property="empl_div"		column="EMPL_DIV" />
		<result property="empl_cost"	column="EMPL_COST" />
	</resultMap>


	<resultMap	id="pjEmplCostMap"	type="com.sqisoft.iqs.pf.vo.PjEmplCostVO">
		<result property="pj_id"	column="PJ_ID" />
		<result property="sqi_cost"	column="SQI_COST" />
		<result property="out_cost"	column="OUT_COST" />
		<result property="sqi_mm"	column="SQI_MM" />
		<result property="out_mm"	column="OUT_MM" />
	</resultMap>

	<select id="getTeamList" resultMap="teamMap">
		SELECT	*
		FROM	team
	</select>
	
	<insert id="teamInsert" parameterType="com.sqisoft.iqs.pf.vo.TeamVO">
		INSERT INTO		team	(
									team_id
									, team_year
									, team_name
									, team_contract
									, team_profit_loss
									, team_income
									, team_product
									, team_outsource
									, team_perofcost
									, team_mm
									, team_mem
								)
				VALUES			(
									#{team_id}
									, now()
									, #{team_name}
									, #{team_contract}
									, #{team_profit_loss}
									, #{team_income}
									, #{team_product}
									, #{team_outsource}
									, #{team_perofcost}
									, #{team_mm}
									, #{team_mem}
								)
	</insert>

	<select id="getTeam" parameterType="String" resultMap="teamMap">
		SELECT	*
		FROM	team
		WHERE	team_id=#{team_id}
	</select>

	<update id="teamUpdate" parameterType="com.sqisoft.iqs.pf.vo.TeamVO">
		UPDATE	team 
		SET		team_name=#{team_name}
				, team_contract = #{team_contract}
				, team_profit_loss = #{team_profit_loss}
				, team_income = #{team_income}
				, team_product = #{team_product}
				, team_outsource = #{team_outsource}
				, team_perofcost = #{team_perofcost}
				, team_mm = #{team_mm}
				, team_mem = #{team_mem}
				, team_normal_cost = #{team_normal_cost}
		WHERE	team_id = #{team_id}
	</update>
	
	<update id="teamCommonUpdate" parameterType="com.sqisoft.iqs.pf.vo.TeamVO">
		Update	team
		SET		team_comm = #{team_comm}
		WHERE	team_id = #{team_id}
	</update>

	<select id="getBudgetList" resultMap="budgetMap">
		SELECT	p.pj_id
				, p.pj_name
				, pj_start_day
				, pj_end_day
				, budget_product_cost
				, budget_contract_sales
				, p.team_id
				, pj_operate
				, pj_prog
				, pj_extra_cost
				, budget_outsource
		From	project p
				, budget b
		WHERE	p.pj_id = b.pj_id 
		AND		pj_prog IS NOT NULL
		AND		(	
					p.pj_id not like concat('영업','%') 
					AND	p.pj_id not like concat('공통','%')
				) 
		AND		pj_prog not in('6c급', '7종료')
		ORDER	BY p.team_id, pj_prog, p.pj_id
	</select>

	<select id="getBudgetCost" parameterType="String" resultMap="budgetMap">
		Select	p.pj_id
				, p.pj_name
				, budget_product_cost
				, pj_extra_cost
				, p.team_id
		From	project p
				, budget b
		Where	p.pj_id = #{pj_id} 
		AND		p.pj_id = b.pj_id
	</select>

	<update id="updateBudgetCost" parameterType="com.sqisoft.iqs.pf.vo.BudgetVO">
		UPDATE	budget
		SET		budget_product_cost = #{budget_product_cost}
				, pj_extra_cost = #{pj_extra_cost}
		WHERE	pj_id = #{pj_id}
	</update>
	
	<select id="teamExist" parameterType="String" resultType="int">
		SELECT	COUNT(*)
		from	team
		where	team_id=#{team_id}
	</select>
	
	<delete id="teamDelete" parameterType="String">
		DELETE
		FROM	team
		WHERE	team_id=#{team_id}
	</delete>

	<select id="getPjHistoryList" resultMap="pjHistoryMap">
		SELECT	p.team_id
				, p.pj_id
				, e.name
				, e.division
				, least(h.pj_end_day,date_format(CURDATE(),"2015-12-31")) pj_end_day
				, greatest(h.pj_start_day,date_format(CURDATE(),"2015-01-01")) pj_start_day
				, h.use_skill
				, e.salary
				, s.month_unit_cost
				, h.pj_end_day
				, h.pj_start_day
		FROM	pj_history h
				, project p
				, employee e 
		LEFT	JOIN emp_sal s 
		ON		e.salary = s.sal_grade
		WHERE	e.name = h.name 
		AND		p.pj_id = h.pj_id 
		AND		(
					h.pj_id not like concat('영업','%') 
					AND h.pj_id not like concat('대기','%') 
					AND h.pj_id not like concat('공통','%')
				) 
		AND		h.pj_end_day <![CDATA[>=]]> date_format(CURDATE(),"2015-01-01 ")
		ORDER	BY h.pj_id
	</select>
	
	<!-- 배부금액(각팀 영업, 공통개발(M,E,B), 전사공통(지원팀)에 대한 정보 List )  -->	
	<select id="getDistribCostList" resultMap="pjHistoryMap">
		SELECT	p.team_id
				, e.name
				, h.pj_id
				, e.division
				, least(h.pj_end_day,date_format(CURDATE(),"%Y-12-31")) pj_end_day
				, greatest(h.pj_start_day,date_format(CURDATE(),"2015-01-01 ")) pj_start_day
				, s.month_unit_cost
		FROM	project p
				, pj_history h
				, employee e 
		LEFT	JOIN emp_sal s 
		ON		e.salary = s.sal_grade
		WHERE	e.name = h.name 
		AND		p.pj_id = h.pj_id
		AND		(
					h.pj_id like concat('영업','%') 
					OR h.pj_id like concat('공통','%') 
					OR p.team_id IN('6C')
				) 
		AND		h.pj_end_day <![CDATA[>=]]> date_format(CURDATE(),"2005-01-01 ")
	</select>
	
	<!-- /test페이지 //// MM는 이인모 계산법 //// PJ_history참조 /// 시작일은 2015-01-01로 되어있음  -->
	<select id="salSearch" parameterType="String" resultMap="pjHistoryMap">
	

		<!--  2015년 전직원 현 pj와 대기 모두, MM ... -->
		SELECT	e.team_id
				, h.pj_id
				, e.name
				, e.division
				, e.salary
				, DATEDIFF(least(h.pj_end_day,date_format(CURDATE(),"%Y-12-31"))
				, greatest(h.pj_start_day,date_format(CURDATE(),"%Y-01-01")))/30 mm
				, h.use_skill
				, s.month_unit_cost
				, (greatest(h.pj_start_day,date_format(CURDATE(),"%Y-01-01"))) as pj_start_day
				, least(h.pj_end_day,date_format(CURDATE(),"%Y-12-31")) as pj_end_day
		FROM	pj_history h
				, employee e 
		LEFT	JOIN emp_sal s 
		ON		e.salary = s.sal_grade
 		WHERE	e.name = h.name 
 		AND		( h.pj_id LIKE CONCAT("대기",'%') OR  h.pj_id LIKE CONCAT(#{pj_id},'%'))
 		AND		e.division like CONCAT (#{division},'%')
 		AND		pj_start_day <![CDATA[<]]> '2016-01-01' AND pj_end_day <![CDATA[>]]> '2014-12-31'
		<if test="division != '외주'">
		AND		(quit_date is null OR quit_date ='0000-00-00') 
		</if>
		ORDER	BY e.name 
	</select>
	
	<select id="getPjHistory" parameterType="com.sqisoft.iqs.pf.vo.PjHistoryVO"	resultMap="pjHistoryMap">
		SELECT	*
		FROM	pj_history
		WHERE	name = #{name}
		AND		pj_id = #{pj_id}
		ORDER	BY pj_end_day DESC 
		LIMIT	1
	</select>
 
	<select id="getPjHistoryListByName" parameterType="String"  resultMap="pjHistoryMap">
		SELECT	*
		FROM	pj_history
		WHERE	name = #{name} 
		ORDER	BY pj_start_day
	</select>
	
	<select id="getPjHistoryListByPJID" parameterType="String"  resultMap="pjHistoryMap">
		SELECT	e.division
				, p.* 
		FROM	pj_history p
				, employee e
		WHERE	e.name = p.name 
		AND		pj_id = #{pj_id} 
		ORDER	BY pj_end_day

	</select>
	
	<delete id="deletePjHistoryWaiting" parameterType="String">
		DELETE
		FROM	pj_history
		WHERE	name = #{name}
		AND		pj_id = '대기'
	</delete>
	
	<delete id="deletePjHistory" parameterType="com.sqisoft.iqs.pf.vo.PjHistoryVO">
		DELETE	
		FROM	pj_history
		WHERE	name = #{name}
		AND		pj_id = #{pj_id}
	</delete>
	
	
	<!-- 대기인원 List  -->
	<select id="getWaitingList" resultMap="pjHistoryMap">
		SELECT	e.name
				, greatest(pj_start_day
				, date_format(CURDATE(),"%Y-01-01")) pj_start_day
				, least(pj_end_day
				, date_sub(date_format(CURDATE(),"%Y-%m-01"),INTERVAL 1 DAY)) pj_end_day
				, s.month_unit_cost
				, h.pj_id
				, t.team_id
		FROM	pj_history h
				, employee e
				, emp_sal s
				, team t	
		WHERE	e.name= h.name 
		AND		e.salary = s.sal_grade 
		AND		pj_id  Like "대기%" 
		AND		pj_start_day <![CDATA[<]]> date_format(CURDATE(),"%Y-%m-01") 
		AND		pj_start_day <![CDATA[>=]]> date_format(CURDATE(),"%Y-01-01") 
		AND		t.team_id=e.team_id
	</select>
	
	<!-- 미배치인원 List  -->
	<select id="getNoPlaceList" resultMap="pjHistoryMap">
		SELECT	e.name
				, greatest(pj_start_day,date_format(CURDATE(),date_format(CURDATE(),"%Y-%m-01"))) pj_start_day
				, least(pj_end_day,date_format(CURDATE(),"%Y-12-31")) pj_end_day
				, s.month_unit_cost
		FROM	pj_history h
				, employee e
				, emp_sal s 
		WHERE	e.name= h.name 
		AND		e.salary = s.sal_grade 
		AND		pj_id  Like "대기%" 
		AND		pj_end_day <![CDATA[>=]]> date_format(CURDATE(),"%Y-%m-01") 
		AND		pj_start_day <![CDATA[>=]]> date_format(CURDATE(),"%Y-01-01")
	</select>

</mapper>
