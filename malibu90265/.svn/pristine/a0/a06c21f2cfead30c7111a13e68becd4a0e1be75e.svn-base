<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="pjBudgetDAO" >
	
	<resultMap type="com.sqisoft.iqs.project.vo.PjBudgetVO" id="pjBudgetMap">
		<id		property="pj_id"			column="pj_id" />
		<result	property="pj_name"			column="pj_name"/>
		<result	property="pj_status_name"	column="pj_status_name"/>
		<result	property="pb_no"			column="pb_no"/>
		<result	property="pb_date"			column="pb_date"/>
		<result	property="pb_start_date"	column="pb_start_date"/>
		<result	property="pb_put_num"		column="pb_put_num"/>
		<result	property="pb_out_mm"		column="pb_out_mm"/>
		<result	property="pb_sqi_mm"		column="pb_sqi_mm"/>
		<result	property="pb_sales"			column="pb_sales"/>
		<result	property="pb_matl_cost"		column="pb_matl_cost"/>
		<result	property="pb_outsrc_cost"	column="pb_outsrc_cost"/>
		<result	property="pb_labor_cost"	column="pb_labor_cost"/>
		<result	property="pb_extra_cost"	column="pb_extra_cost"/>
	</resultMap>
	
	<select id="getSelectedBudgetList" parameterType="string" resultMap="pjBudgetMap">
		SELECT 	pj_id
				, pb_no
				, pb_date
				, pb_start_date
				, pb_put_num
				, pb_sqi_mm
				, pb_out_mm
				, pb_sales
				, pb_matl_cost
				, pb_outsrc_cost
				, pb_labor_cost
				, pb_extra_cost
		FROM 	pj_budget
		WHERE	pj_id = #{pj_id}
		ORDER BY pb_date, pb_no
	</select>
	
	<select id="getProjectBudgetList" parameterType="map" resultMap="pjBudgetMap">
		SELECT	project.pj_id as pj_id
				, pj_status.pj_status_name as pj_status_name
				, MAX(pj_budget.pb_no) as pb_no 
				, pj_budget.pb_date as pb_date
				, project.pj_name as pj_name
		FROM	pj_status
				, project 
		INNER	JOIN	team
		ON		project.tm_id = team.tm_id
		LEFT	JOIN	pj_budget
		ON		project.pj_id = pj_budget.pj_id
		WHERE	team.tm_id = #{tm_id} 
		<if test="firstParam != null and firstParam !=''" >
		AND		pj_status.pj_status_name NOT IN (#{firstParam}, #{secondParam}, #{thirdParam})
		</if>
		AND		project.pj_status = pj_status.pj_status_id
		<if test="pj_status != 0">
		AND		project.pj_status = #{pj_status}
		</if>
		GROUP	BY project.pj_id
		ORDER	BY project.pj_status
				, pj_budget.pb_date DESC
				, pj_budget.pb_no DESC
	</select>
	
	<select id="getProjectBudgetInfoByProject" parameterType="string" resultType="com.sqisoft.iqs.project.vo.PjBudgetInfoVO">
		SELECT 	p.pj_id 				AS pj_id,
				p.pj_name 				AS pj_name,
				p.pj_start_date 		AS pj_start_date,
				p.pj_end_date 			AS pj_end_date,
				pbi.pbi_sales			AS totalContract,
				pbi.pbi_year_sales		AS yearSales,
				pbi.pbi_net_sales		AS netSales,
				pbi.pbi_profit_sales		AS profitSales,
				pbi.pbi_tot_cost		AS totalSalesCost,
				pbi.pbi_emp_cost		AS totalLaborCost,
				pbi.pbi_labor_cost		AS totalDirectCost,
				pbi.pbi_wait_cost		AS commonAndWaitCost,
				pbi.pbi_sales_cost		AS totalSales,
				pbi.pbi_support_cost	AS totalOutCost,
				pbi.pbi_outsrc_cost		AS totalOutCost,
				pbi.pbi_matl_cost		AS totalMatlCost,
				pbi.pbi_expnc_cost		AS totalCost,
				pbi.pbi_sqi_mm			AS totalLaborMM,
				pbi.pbi_out_mm			AS totalOutMM
		FROM 	pj_budget_info pbi, project p
		WHERE 	p.pj_id = #{pj_id}
    	AND 	pbi.pj_id = p.pj_id
	</select>

	<resultMap type="com.sqisoft.iqs.humanResource.employeeInput.vo.EmployeeInputVO" id="EmployeeInputVO">
		<id 	column="pj_id" 			property="pj_id"/>
		<id	 	column="pj_name" 		property="pj_name"/>
		<result column="pj_start_date" 	property="pj_start_date"/>
		<result column="pj_end_date" 	property="pj_end_date"/>
		<result column="pj_loc" 		property="pj_loc"/>
		<result column="pj_cwm_env" 	property="pj_cwm_env"/>
		<result column="pj_put_num" 	property="pj_put_num"/>
		<result column="pj_req_num" 	property="pj_req_num"/>
		
		<result column="pr_grade" 		property="pr_grade"/>
		<result column="pr_job_skill" 	property="pr_job_skill"/>
		<result column="pr_start_date" 	property="pr_start_date"/>
		<result column="pr_end_date" 	property="pr_end_date"/>
		<result column="pr_name" 		property="pr_name"/>
		<result column="pr_sq" 			property="pr_sq"/>
		<result column="pr_uprice" 		property="pr_uprice"/>
		
		<result column="pd_sq" 			property="pd_sq"/>
		<result column="pd_name" 		property="pd_name"/>
		<result column="pd_uprice" 		property="pd_uprice"/>
		<result column="pd_start_date" 	property="pd_start_date"/>
		<result column="pd_end_date" 	property="pd_end_date"/>
		<result column="pd_ratio" 		property="pd_ratio"/>
		<result column="pd_abc" 		property="pd_abc"/>
		<result column="pd_abc_desc" 	property="pd_abc_desc"/>

		<result column="tm_id" 			property="tm_id"/>
		<result column="tm_name" 		property="tm_name"/>
	</resultMap>
	
	<select id="getEmployeeListFromDeployAndProject" parameterType="map" resultMap="EmployeeInputVO">
		SELECT	pj_id
				, pd_sq
				, pd_name
				, pd_uprice
				, pd_start_date
				, pd_end_date
				, pr_sq
				, pd_ratio
				, pd_abc
				, pd_abc_desc
		FROM	pj_deploy
				, human_resource
		WHERE	pj_deploy.pd_name = human_resource.hr_name
		AND		pj_id = #{pj_id}
		<if test="division == '직원'">
		AND ((human_resource.hr_company LIKE CONCAT('')) OR human_resource.hr_company LIKE CONCAT('SQI', '%'))
		</if>
		<if test="division == '외주'">
		AND		human_resource.hr_company NOT LIKE CONCAT('SQI', '%')
		</if>
	</select>
	
	<select id="getAllDeployCount" parameterType="string" resultType="_int">
		SELECT 	COUNT(*)
		FROM	pj_deploy
		WHERE	pj_id = #{pj_id}
	</select>
	
	<select id="getEachLaborCost" parameterType="map" resultType="_int">
		SELECT	hp_mon_price
		FROM	hr_price
		WHERE	hp_team = #{tm_id}
		AND		hp_position LIKE CONCAT('%', SUBSTR(#{hr_position},2))
	</select>
	
	<select id="checkDuplicateYN" parameterType="string" resultType="int">
		SELECT 	COUNT(*)
		FROM	pj_budget
		WHERE	pj_id = #{pj_id}
		AND		pb_no = #{pb_no}
	</select>
	
	<update id="updateProjectBudgetInfo" parameterType="map">
		UPDATE 	pj_budget
		SET		pb_date = SYSDATE(),
				pb_no = #{pb_no},
				pb_start_date = #{pb_start_date},
				pb_end_date = #{pb_end_date},
				pb_sales = #{pb_sales},
				pb_matl_cost = #{pb_matl_cost},
				pb_extra_cost = #{pb_extra_cost}
		WHERE	pj_id = #{pj_id}
		AND		pb_no = #{original_pb_no}
	</update>
	
	<insert id="insertProjectBudgetInfo" parameterType="map">
		INSERT	INTO pj_budget
		VALUES	(#{pj_id}
				, #{pb_no}
				, SYSDATE()
				, #{pb_start_date}
				, #{pb_end_date}
				, #{pb_put_num}
				, #{pb_sqi_mm}
				, #{pb_out_mm}
				, #{pb_sales}
				, #{pb_matl_cost}
				, #{pb_outsrc_cost}
				, #{pb_labor_cost}
				, #{pb_extra_cost})
	</insert>
	
	<select id="getProjectHistoryInfo" parameterType="string" resultType="com.sqisoft.iqs.project.vo.PjBudgetVO">
		SELECT 	pj_id
				, pb_no
				, pb_date
				, pb_start_date
				, pb_end_date
				, pb_put_num
				, pb_sqi_mm
				, pb_out_mm
				, pb_sales
				, pb_matl_cost
				, pb_outsrc_cost
				, pb_labor_cost
				, pb_extra_cost
		FROM 	pj_budget
		WHERE	pj_id = #{pj_id}
	</select>
	
	<select id="getPjCount" parameterType="string" resultType="_int">
		SELECT 	COUNT(*)
		FROM	pj_budget
		WHERE	pj_id = #{pj_id}
	</select>
	
	<select id="getpjBudgetInfo" parameterType="string" resultType="com.sqisoft.iqs.project.vo.PjBudgetVO">
		SELECT 	pj_id
				, pb_no
				, pb_date
				, pb_start_date
				, pb_end_date
				, pb_put_num
				, pb_sqi_mm
				, pb_out_mm
				, pb_sales
				, pb_matl_cost
				, pb_outsrc_cost
				, pb_labor_cost
				, pb_extra_cost
		FROM 	pj_budget
		WHERE	pb_no = (SELECT 	MAX(pb_no)
						FROM 	pj_budget
						WHERE	pj_id = #{pj_id})	
		
	</select>
	
	<select id="getProjectHistoryListtest" parameterType="map" resultMap="pjBudgetMap">
		SELECT 	pb.pj_id
				, pb.pb_no
				, pb.pb_date
				, pb.pb_start_date
				, pb.pb_end_date
				, pb.pb_put_num
				, p.pj_emp_mm AS pb_emp_mm
				, p.pj_outEmp_mm AS pb_outEmp_mm
				, pb.pb_sales
				, pb.pb_matl_cost
				, pb.pb_outsrc_cost
				, pb.pb_labor_cost
				, pb.pb_extra_cost
		FROM 	pj_budget pb, project p
		WHERE	pb.pj_id =  #{pj_id}
		AND     p.pj_id = #{pj_id}
		AND     pb_no = #{pb_no}
	</select>
	
	<delete id="deleteBudgetInfoByPjId" parameterType="map">
		DELETE
		FROM	pj_budget
		WHERE	pj_id = #{pj_id}
		AND		pb_no = #{pb_no}
	</delete>
</mapper>