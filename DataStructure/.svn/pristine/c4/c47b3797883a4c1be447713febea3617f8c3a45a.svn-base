<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="projectDAO">
	<resultMap type="com.sqisoft.iqs.pf.vo.ProjectVO" id="projectResultMap">
		<result property="team_name"				column="team_name"/>
		<result property="team_id"					column="TEAM_ID" />
		<result property="pj_id"					column="PJ_ID" />
		<result property="pj_name"					column="PJ_NAME" />
		<result property="customer_name"			column="customer_name" />
		<result property="top_customer"				column="top_customer"/>
		<result property="pj_start_day"				column="PJ_START_DAY" />
		<result property="pj_end_day"				column="PJ_END_DAY" />
		<result property="pj_prog"					column="PJ_PROG" />
		<result property="pj_pm"					column="PJ_PM" />
		<result property="pj_biz"					column="PJ_BIZ" />
		<result property="pj_etc"					column="PJ_ETC" />
		<result property="pj_sqimm"					column="PJ_SQIMM" />
		<result property="pj_outmm"					column="PJ_OUTMM" />
		<result property="pj_frame"					column="PJ_FRAME" />
		<result property="pj_lang"					column="PJ_LANG" />
		<result property="pj_db"					column="PJ_DB" />
		<result property="pj_tool1"					column="PJ_TOOL1" />
		<result property="pj_tool2"					column="PJ_TOOL2" />
		<result property="pj_tool3"					column="PJ_TOOL3" />
		<result property="pj_loc"					column="PJ_LOC" />
		<result property="pj_require"				column="PJ_REQUIRE" />
		<result property="budget_contract_sales"	column="BUDGET_CONTRACT_SALES" />
		<result property="budget_product_cost"		column="BUDGET_PRODUCT_COST" />
		<result property="budget_outsource"			column="BUDGET_OUTSOURCE" />
		<result property="pj_period"				column="PJ_PERIOD" />
		<result property="pj_extra_cost"			column="pj_extra_cost"/>
		<result property="state"					column="biz_stat"/>
		<result property="pj_remo"					column="pj_remo"/>
	</resultMap>
	
	<resultMap type="com.sqisoft.iqs.pf.vo.BizMileVO" id="bizMileResultMap">
		<result	property="pj_id"			column="PJ_ID" />
		<result	property="pj_prog"			column="PJ_PROG" />
		<result	property="cus_meet"			column="CUS_MEET" />
		<result	property="needs_anal"		column="NEEDS_ANAL" />
		<result	property="cus_converse"		column="CUS_CONVERSE" />
		<result	property="present"			column="PRESENT" />
		<result	property="propose"			column="PROPOSE" />
		<result	property="contract"			column="CONTRACT" />
		<result	property="perform"			column="PERFORM" />
		<result	property="afterservice"		column="AFTERSERVICE" />
		<result	property="mile_stat"		column="MILE_STAT" />
		<result	property="team_name"		column="TEAM_NAME" />
	</resultMap>


	<select id="getProjectList" resultMap="projectResultMap">
		SELECT	d.team_name
				, p.pj_id
				, pj_name
				, p.customer_name
				, pj_start_day
				, pj_end_day
				, b.pj_operate
				, DATEDIFF(pj_end_day, pj_start_day) pj_period
				, SUBSTRING(b.pj_prog,2,2) as pj_prog, pj_pm
				, pj_biz
				, pj_etc
				, budget_contract_sales
				, pj_loc
				, pj_require
				, budget_outsource
				, greatest(p.pj_remo,b.pj_remo,c.pj_remo) pj_remo
				, budget_product_cost
				, pj_sqimm
				, pj_outmm
				, biz_stat
				, top_customer
		FROM	project p
				, budget b
				, biz_mile c
				,team d
		WHERE	p.pj_id = b.pj_id 
		AND		p.pj_id=c.pj_id 
		AND		p.team_id=d.team_id
		ORDER	BY p.team_id
				, b.pj_prog
				, p.pj_id
	</select>
	<select id="getProject" parameterType="String" resultMap="projectResultMap">
		SELECT	p.team_id
				, p.pj_id
				, pj_name
				, p.customer_name
				, pj_start_day
				, pj_end_day
				, DATEDIFF(pj_end_day, pj_start_day) pj_period
				, pj_operate
				, pj_sqimm
				, pj_outmm
				, pj_prog
				, pj_pm
				, pj_loc
				, pj_biz
				, pj_etc
				, pj_db
				, pj_extra_cost
				, pj_require
				, budget_contract_sales
				, budget_outsource
				, budget_product_cost
				, top_customer
		FROM	project p
				, budget b
		WHERE	p.pj_id = b.pj_id 
		AND		p.pj_id= #{pj_id}
		ORDER	BY p.team_id
				, b.pj_prog
	</select>
	<update id="projectUpdate" parameterType="com.sqisoft.iqs.pf.vo.ProjectVO">
		UPDATE	project
		SET		team_id=#{team_id}
				, pj_name=#{pj_name}
				, customer_name=#{customer_name}
				, top_customer=#{top_customer}
				, pj_start_day=#{pj_start_day}
				, pj_end_day=#{pj_end_day}
				, pj_sqimm=#{pj_sqimm}
				, pj_outmm=#{pj_outmm}
				, pj_pm=#{pj_pm}
				, pj_biz=#{pj_biz}
				, pj_loc=#{pj_loc}
				, pj_etc=#{pj_etc}
				, pj_require=#{pj_require}
				, pj_remo=now()
		WHERE	pj_id=#{pj_id}
	</update>
	
	<update id="budgetUpdate" parameterType="com.sqisoft.iqs.pf.vo.ProjectVO">
		UPDATE	budget
		SET		budget_contract_sales=#{budget_contract_sales}
				, budget_product_cost=#{budget_product_cost}
				, budget_outsource=#{budget_outsource}
				, pj_extra_cost=#{pj_extra_cost}
				, pj_prog=#{pj_prog}
				, pj_operate=#{pj_operate}
				, pj_remo=now()
		WHERE	pj_id=#{pj_id}
	</update>
		
	<insert id="pjneeds_Insert" parameterType="com.sqisoft.iqs.hr.vo.PjNeedsVO">
		insert	into pjneeds (pj_id)
		values	(#{pj_id})
	</insert>

	<delete id="projectDelete" parameterType="String">
		DELETE	
		FROM	project
		where	pj_id=#{pj_id}
	</delete>


	<select id="getBizMileList" resultMap="bizMileResultMap">
		SELECT	* 
		FROM	biz_mile
	</select>
	

	<update id="bizMileUpdate" parameterType="com.sqisoft.iqs.pf.vo.BizMileVO">
		UPDATE	biz_mile 
		SET
		<if test="cus_meet != ''">
				cus_meet=#{cus_meet},
		</if>
		<if test="needs_anal != ''">
				needs_anal=#{needs_anal},
		</if>
		<if test="cus_converse != ''">
				cus_converse=#{cus_converse},
		</if>
		<if test="present != ''">
				present=#{present},
		</if>
		<if test="propose != ''">
				propose=#{propose},
		</if>
		<if test="contract != ''">
				contract=#{contract},
		</if>
		<if test="perform != ''">
				perform=#{perform},
		</if>
		<if test="afterservice != ''">
				afterservice=#{afterservice},
		</if>
				biz_stat=#{biz_stat}
				, pj_remo=now()
				, pj_id=#{pj_id}
		WHERE	pj_id=#{pj_id}
	</update>
	<!-- <update id="update" parameterType="com.dept.vo.DeptVO"> UPDATE dept 
		SET dname=#{deptName}, loc=#{location} WHERE deptno=#{deptNo} </update> -->


	<insert id="insertProject" parameterType="com.sqisoft.iqs.pf.vo.ProjectVO">
		INSERT	INTO	project	(
									team_id
									, pj_id
									, pj_name
									, customer_name
									, top_customer
									, pj_start_day
									, pj_end_day
									, pj_loc
									, pj_pm
									, pj_biz
									, pj_etc
									, pj_sqimm
									, pj_outmm
									, pj_frame
									, pj_lang
									, pj_db
									, pj_tool1
									, pj_tool2
									, pj_tool3
									, pj_require
									, pj_remo
								)
						VALUES	(
									#{team_id}
									, #{pj_id}
									, #{pj_name}
									, #{customer_name}
									, #{top_customer}
									, #{pj_start_day}
									, #{pj_end_day}
									, #{pj_loc}
									, #{pj_pm}
									, #{pj_biz}
									, #{pj_etc}
									, #{pj_sqimm}
									, #{pj_outmm}
									, #{pj_frame}
									, #{pj_lang}
									, #{pj_db}
									, #{pj_tool1}
									, #{pj_tool2}
									, #{pj_tool3}
									, #{pj_require}
									, now()
								)
	</insert>
	
	<insert id="insertPbudget" parameterType="com.sqisoft.iqs.pf.vo.ProjectVO">
		INSERT	INTO	budget	(
									pj_id
									, team_id
									, pj_prog
									, pj_operate
									, budget_product_cost
									, budget_contract_sales
									, budget_outsource
									, pj_remo
								)
						VALUES (
									#{pj_id}
									, #{team_id}
									, #{pj_prog}
									, #{pj_operate}
									, #{budget_product_cost}
									, #{budget_contract_sales}
									, #{budget_outsource}
									, now()
								)
	</insert>
	
	<insert id="insertPbiz_mile" parameterType="String">
		INSERT	INTO	biz_mile	(
										pj_id
										, cus_meet
										, biz_stat
										, pj_remo
									)
						VALUES		(
										#{pj_id}
										, now()
										, "고객접촉"
										, now()
									)
	</insert>

	<select id="pjCheck" parameterType="String" resultType="int">
		SELECT	count(*)
		FROM	project
		WHERE	pj_id=#{pj_id}
	</select>
	
	<select	id="projectSearch"	parameterType="com.sqisoft.iqs.pf.vo.ProjectVO"
								resultMap="projectResultMap">
		SELECT	a.pj_id
				, SUBSTRING(b.pj_prog,2,2) as pj_prog
				, c.team_name
				, b.budget_contract_sales
		FROM	project a
				, budget b
				, team c
		WHERE 	
		<if test="team_id != 'al'">
				a.team_id=#{team_id} AND
		</if>
		<if test="pj_prog != ''">
				b.pj_prog=#{pj_prog} AND
		</if>
				a.pj_id=b.pj_id 
		AND		a.team_id = c.team_id
		<if test="pj_id!= ''">
		AND		a.pj_id LIKE CONCAT('%',#{pj_id},'%')
		</if>
		ORDER	BY a.team_id
				, b.pj_prog
				, a.pj_id
	</select>

	<select	id="bizmileSearch"	parameterType="com.sqisoft.iqs.pf.vo.BizMileVO"
								resultMap="bizMileResultMap">
		SELECT	p.pj_id
				, SUBSTRING(b.pj_prog,2,2) as pj_prog
				, p.team_id
				, cus_meet
				, needs_anal
				, cus_converse
				, present 
				, propose
				, contract
				, perform
				, afterservice 
				, biz_stat
				, t.team_name
		FROM	project p
				, biz_mile m
				, team t
				, budget b
		WHERE	
		<if test="biz_stat != ''">
				m.biz_stat=#{biz_stat} AND
		</if>
				p.pj_id=m.pj_id
		<if test="pj_id!= ''">
		AND		p.pj_id LIKE CONCAT('%',#{pj_id},'%')
		</if>
		And		p.team_id = t.team_id
		<if test="team_id!= 'al'">
		AND		p.team_id LIKE CONCAT('%',#{team_id},'%')
		</if>
		AND		p.pj_id = b.pj_id
		<if test="pj_prog != ''">
		AND		b.pj_prog=#{pj_prog}
		</if>
		ORDER	BY p.team_id
	</select>
	
	<select id="getBizMile" parameterType="String" resultMap="bizMileResultMap">
		SELECT	p.pj_id
				, p.team_id
				, cus_meet
				, needs_anal
				, cus_converse
				, present 
				, propose
				, contract
				, perform
				, afterservice 
				, biz_stat
				, t.team_name
		FROM	project p
				, biz_mile m
				, team t
		WHERE	p.pj_id = m.pj_id 
		AND		p.team_id = t.team_id 
		AND		p.pj_id = #{pj_id}
		ORDER	BY p.team_id
	</select>
	
   	<select id="pjSearch" parameterType="java.util.HashMap" resultMap="projectResultMap">
		SELECT	d.team_name
				, p.pj_id
				, pj_name
				, p.customer_name
				, pj_start_day
				, pj_end_day
				, b.pj_operate
				, DATEDIFF(pj_end_day, pj_start_day) pj_period
				, SUBSTRING(b.pj_prog,2,2) as pj_prog
				, pj_pm
				, pj_biz
				, pj_etc
				, budget_contract_sales
				, pj_loc
				, pj_require
				, budget_outsource
				, budget_product_cost
				, pj_sqimm
				, pj_outmm
				, biz_stat
				, top_customer
				, greatest(p.pj_remo,b.pj_remo,c.pj_remo) pj_remo
		FROM	project p
				, budget b
				, biz_mile c
				, team d
		WHERE	p.pj_id = b.pj_id 
		AND		p.pj_id=c.pj_id
		AND		p.team_id=d.team_id
		<if test="team_id != 'al'">
		AND		p.team_id=#{team_id}
		</if>
		<if test="pj_id!=''">
		AND		(
					p.pj_id Like concat(#{pj_id},"%") 
					OR		p.pj_name Like concat(#{pj_id},"%")
					OR		p.top_customer Like concat(#{pj_id},"%")
					OR		p.customer_name Like concat(#{pj_id},"%")
				)
		</if>
	 	<if test="con.isEmpty()!=true">
		AND		b.pj_prog in
		<foreach collection="con" item="item" index="index"  open="("  separator="," close=")">
		#{item}
		</foreach>
		</if>
		ORDER	BY 
		<if test="pj_remo!=''">
					pj_remo ASC,
		</if>
		 			p.team_id ASC
		 			, b.pj_prog
		 			,b.pj_id
	</select>

	<!-- // TODO1. “getItem” 라는 id로 상품코드로 상품정보를 조회하는 <select> 구문을 작성하시오. // 
		TODO2. “addPayment” 라는 id로 결제 정보를 저장하는 <insert> 구문을 작성하시오. // TODO3. “addOrderInfo” 
		라는 id로 구매정보를 저장하는 <insert> 구문을 작성하시오. -->
</mapper>