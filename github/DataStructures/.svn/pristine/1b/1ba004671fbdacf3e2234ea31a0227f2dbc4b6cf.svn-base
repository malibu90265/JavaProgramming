<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="humanResourceDAO" >
	<resultMap	type="com.sqisoft.iqs.humanResource.humanResource.vo.HumanResourceVO" id="humanResourceMap">
		<id		property="hr_name"			column="hr_name" />
		<result property="hr_company"		column="hr_company" />
		<result property="tm_id"			column="tm_id" />
		<result property="hr_position"		column="hr_position" />
		<result property="hr_grade"			column="hr_grade" />
		<result property="hr_email"			column="hr_email" />
		<result property="hr_mobile"		column="hr_mobile" />
		<result property="hr_hire_date"		column="hr_hire_date" />
		<result property="hr_quit_date"		column="hr_quit_date" />
		<result property="hr_career_date"	column="hr_career_date" />
		<result property="hr_uprice"		column="hr_uprice" />
		<result property="hr_upd"			column="hr_upd" />
		<result property="hr_b4_upd" 		column="hr_b4_upd" />
		<result property="hr_b4_uprice"		column="hr_b4_uprice" />
		<result property="hr_cwm_env"		column="hr_cwm_env" />
		<result property="hr_job_skill"		column="hr_job_skill" />
		<result property="hr_nextpj_date"	column="hr_nextpj_date" />
		<result property="hr_LMD"			column="hr_LMD" />
		<result property="hr_abc"			column="hr_abc" />
		<result property="hr_soft_abc"		column="hr_soft_abc" />
		<result property="hr_residence"		column="hr_residence" />
		<result property="hr_it_career"		column="hr_it_career" />
		<result property="hr_sqi_career"	column="hr_sqi_career" />
		<result property="hr_last_school"	column="hr_last_school" />
		<result property="hr_major"			column="hr_major" />
		<result property="hr_last_project"	column="hr_last_project" />
		<result property="hr_os"			column="hr_os" />
		<result property="hr_DB"			column="hr_DB" />
		<result property="hr_ui"			column="hr_ui" />
		<result property="hr_lang"			column="hr_lang" />
		<result property="hr_fw"			column="hr_fw" />
		<result property="hr_mw"			column="hr_mw" />
		<result property="hr_domain"		column="hr_domain" />
		<result property="hr_role"			column="hr_role" />
		<result property="hr_img"			column="hr_img" />
		<result property="pd_abc"			column="pd_abc" />
		<result property="pd_soft_abc"		column="pd_soft_abc" />
		<result property="email"			column="email" />
		<result property="passwd"			column="passwd" />
		<result property="account"			column="account" />
	</resultMap>
	
	<resultMap type="com.sqisoft.iqs.admin.basicinfo.vo.RoleVO" id="roleMap"> 
		<id		property="role_id"		column="role_id"/>
		<result property="each_role" 	column="each_role"/>
	</resultMap>
	
	<!-- 직원 list  -->
	<select id="humanResourceList3" resultType="com.sqisoft.iqs.humanResource.humanResource.vo.HumanResourceVO" >
		SELECT	hr_img
				, hr_name
				, hr_position 
		FROM	human_resource
		WHERE	hr_company LIKE concat('%','SQI','%')
		AND		hr_quit_date IS NULL
		ORDER	BY hr_name
	</select>
	
	<!-- 외주 list  -->
	<select id="outHumanResourceList" resultMap="humanResourceMap" >
		SELECT	hr_name
				, hr_grade AS hr_grade 
		FROM	human_resource
		WHERE	hr_company NOT LIKE concat('%','SQI','%')
		AND		hr_quit_date IS NULL
		ORDER	BY hr_grade, hr_name
	</select>
	
	<!--직원 search  (team, name)-->
	<select		id="getHumanResourceListSearchAjax" parameterType="map" resultMap="humanResourceMap">
		SELECT	h.hr_img
				, h.hr_name
				, hr_position 
		FROM	human_resource h
		WHERE
				<if test=" tm_name != null and tm_name !='' ">
				h.tm_id =	(
								SELECT	t.tm_id
								FROM	team t
								WHERE	t.tm_name = #{tm_name}
								AND		t.tm_year = YEAR(now())
							)
		AND		h.hr_company LIKE concat('%','SQI','%')
		AND		h.hr_quit_date IS NULL
				</if>
				<if test="hr_name != null and hr_name !=''">
				h.hr_name LIKE concat ('%',#{hr_name},'%')
		OR		h.hr_quit_date != NULL
				</if>
		ORDER	BY hr_name
	</select>
	
	<!--  외주 이름, 등급 검색. -->
	<select id="getOutHumanResourceListSearchAjax" parameterType="map" resultMap="humanResourceMap">
		SELECT	hr_name
				, hr_grade AS hr_grade 
		FROM	human_resource
		WHERE	hr_company NOT LIKE concat('%','SQI','%')
		AND		hr_company != ""
		<if test="hr_name != null and hr_name !=''">
		AND		hr_name LIKE concat ('%',#{hr_name},'%')
		</if>
		<if test="hr_grade != null and hr_grade != '' ">
		AND		hr_grade LIKE concat ('%',#{hr_grade},'%')
		</if>
		ORDER	BY hr_grade, hr_name
	</select>
	
	<!-- 상세 보기 -->
	<select		id="humanResourceDetail" parameterType="string" resultMap="humanResourceMap">
		SELECT	hr_name
				, hr_company
				, tm_id
				, hr_position
				, hr_grade
				, hr_email
				, hr_mobile
				, hr_hire_date
				, hr_quit_date
				, hr_career_date
				, hr_uprice
				, hr_upd
				, hr_b4_upd
				, hr_b4_uprice
				, hr_cwm_env
				, hr_job_skill
				, hr_nextpj_date
				, hr_LMD
				, hr_abc
				, hr_residence
				, hr_it_career
				, hr_sqi_career
				, hr_last_school
				, hr_major
				, hr_last_project
				, hr_os
				, hr_DB
				, hr_ui
				, hr_lang
				, hr_fw
				, hr_mw
				, hr_domain
				, hr_role
				, hr_img
		FROM	human_resource h
		WHERE	hr_name = #{hr_name}
	</select>
	
	<!-- 외주 상세 보기 -->
	<select		id="outhumanResourceDetail" parameterType="string" resultMap="humanResourceMap">
		SELECT	hr_name
				, hr.hr_company
				, tm_id
				, hr.hr_grade
				, hr.hr_email
				, hr.hr_mobile
				, hr.hr_hire_date
				, hr.hr_quit_date
				, hr.hr_career_date
				, hr.hr_uprice
				, hr.hr_upd
				, hr.hr_b4_upd
				, hr.hr_b4_uprice
				, hr.hr_cwm_env
				, hr.hr_job_skill
				, hr.hr_nextpj_date
				, hr.hr_LMD
				, hr.hr_abc
				, hr.hr_residence
				, hr.hr_it_career
				, hr.hr_sqi_career
				, hr.hr_last_school
				, hr.hr_major
				, hr.hr_last_project
				, hr.hr_os
				, hr.hr_DB
				, hr.hr_ui
				, hr.hr_lang
				, hr.hr_fw
				, hr.hr_mw
				, hr.hr_domain
				, hr.hr_role
				, hr.hr_img
				, pd.pd_abc
				, pd.pd_soft_abc
		FROM	human_resource hr
		LEFT	JOIN	(
							SELECT	*
							FROM	pj_deploy
							WHERE	NOT ISNULL(pd_abc)
							AND		NOT ISNULL(pd_soft_abc)
						) AS pd
		ON		hr.hr_name = pd.pd_name
		WHERE	hr.hr_name = #{hr_name}
		ORDER	BY pd_end_date DESC LIMIT 1
	</select>
	
	<!-- pj수행이력 개인 리스트 map -->
	<resultMap type="com.sqisoft.iqs.humanResource.vo.HumanResourceEachListVO" id="humanResourceEachMap">
		<result property="tm_name"				column="tm_name" />
		<result property="pj_id"				column="pj_id" />
		<result property="pj_name"				column="pj_name" />
		<result property="pd_start_date"		column="pd_start_date" />
		<result property="pd_end_date"			column="pd_end_date" />
		<result property="pd_abc"				column="pd_abc" />
		<result property="pd_abc_desc"			column="pd_abc_desc" />
		<result property="pj_cwm_env"			column="pj_cwm_env" />
		<result property="pj_loc"				column="pj_loc" />
	</resultMap>

	<!-- pj수행이력 : 투입에만 있는 경우 -->
	<select		id="getPJWorkingHistoryPopupAjax" parameterType="string" resultMap="humanResourceEachMap">
		SELECT	t.tm_name
				, d.pj_id
				, d.pd_start_date
				, d.pd_end_date
				, d.pd_abc
				, d.pd_abc_desc
		FROM	team t
				, pj_deploy d
				, project p
				, human_resource h
		WHERE	d.pd_name IN (#{hr_name})
		AND		d.pd_name = h.hr_name
		AND		t.tm_id = h.tm_id
		AND		p.pj_id != d.pj_id
		AND		NOT d.pj_id IN ('대기')
		GROUP	BY d.pj_id
		ORDER	BY pd_start_date DESC
	</select>
	<!-- 프로젝트에 있을 경우 -->
	<select		id="getPJWorkingHistoryPopupAjaxWithProject" parameterType="string" resultMap="humanResourceEachMap">
		SELECT	t.tm_name
				, d.pj_id
				, p.pj_name
				, d.pd_start_date
				, d.pd_end_date
				, d.pd_abc
				, d.pd_abc_desc
				, p.pj_cwm_env
				, p.pj_loc
		FROM	team t
				, pj_deploy d
				, project p
		WHERE	d.pd_name IN (#{hr_name})
		AND		p.pj_id = d.pj_id
		AND		t.tm_id = p.tm_id
		ORDER	BY pd_start_date DESC
	</select>

	<!-- 수정 -->
	<update id="getHumanResourceModifyFormAjax" parameterType="com.sqisoft.iqs.humanResource.humanResource.vo.HumanResourceVO">
		UPDATE 	human_resource
		SET		hr_company		= #{hr_company}
				, tm_id				= #{tm_id}
				, hr_position		= #{hr_position}
				, hr_grade			= #{hr_grade}
				, hr_email			= #{hr_email}
				, hr_mobile			= #{hr_mobile}
				, hr_hire_date 		= #{hr_hire_date}
				, hr_quit_date		= CASE	WHEN #{hr_quit_date} IS NULL THEN NULL
											WHEN #{hr_quit_date} = '' THEN NULL
											ELSE #{hr_quit_date}
										END
				, hr_career_date	= CASE	WHEN #{hr_career_date} IS NULL THEN NULL
											WHEN #{hr_career_date} = '' THEN NULL
											ELSE #{hr_career_date}
										END
				, hr_uprice			= REPLACE(#{hr_uprice}, ',', '')
				, hr_upd			= #{hr_upd}
				, hr_b4_upd			= #{hr_b4_upd}
				, hr_b4_uprice		= #{hr_b4_uprice}
				, hr_cwm_env		= #{hr_cwm_env}
				, hr_job_skill		= #{hr_job_skill}
				, hr_nextpj_date	= CASE	WHEN #{hr_nextpj_date} IS NULL THEN NULL
											WHEN #{hr_nextpj_date} = '' THEN NULL
											ELSE #{hr_nextpj_date}
										END
				, hr_LMD			= NOW()
				, hr_abc			= #{hr_abc}
				, hr_residence		= #{hr_residence}
				, hr_it_career		= #{hr_it_career}
				, hr_sqi_career		= #{hr_sqi_career}
				, hr_last_school	= #{hr_last_school}
				, hr_major			= #{hr_major}
				, hr_last_project	= #{hr_last_project}
				, hr_os				= #{hr_os}
				, hr_DB				= #{hr_DB}
				, hr_ui				= #{hr_ui}
				, hr_lang			= #{hr_lang}
				, hr_fw				= #{hr_fw}
				, hr_mw				= #{hr_mw}
				, hr_domain			= #{hr_domain}
				, hr_role			= #{hr_role}
				, hr_img			= #{hr_img}
		WHERE	hr_name = #{hr_name}
	</update>
	
	<!-- human_resource 테이블 삭제 -->
	<delete id="getHumanResourceDeleteFormAjax" parameterType="map">
		DELETE
		FROM	human_resource 
		WHERE	hr_name = #{hr_name}
	</delete>
	
	<!-- account 계정 삭제 -->
	<delete id="getAccountDelete" parameterType="map">
		DELETE
		FROM	account
		WHERE	email = #{hr_email}
	</delete>

	<!-- 최종 수행 프로젝트 -->
	<select id="getPersonDeployHistory" parameterType="string" resultType="string">
		SELECT	p.pj_name
		FROM	project p
		INNER	JOIN
				(
					SELECT	pj_id, MAX(pd_end_date) AS MaxDateTime
					FROM	pj_deploy d
					WHERE	d.pd_name= #{origin_hr_name}
					GROUP	BY pj_id
					ORDER	BY MaxDateTime DESC
					LIMIT 1
				) AS maxt
		ON		p.pj_id = maxt.pj_id;
	</select>
	
	<!-- 만들기 -->
	<insert		id="getHumanResourceDoInsertForm"	parameterType="com.sqisoft.iqs.humanResource.humanResource.vo.HumanResourceVO">
		INSERT	INTO human_resource	(
										hr_name
										,hr_company
										,tm_id
										,hr_position
										,hr_grade
										,hr_email
										,hr_mobile
										,hr_hire_date
										,hr_quit_date
										,hr_career_date
										,hr_upd
										,hr_cwm_env
										,hr_job_skill
										,hr_nextpj_date
										,hr_LMD
										,hr_abc
										,hr_residence
										,hr_it_career
										,hr_sqi_career
										,hr_last_school
										,hr_major
										,hr_last_project
										,hr_os
										,hr_DB
										,hr_ui
										,hr_lang
										,hr_fw
										,hr_mw
										,hr_domain
										,hr_role
										,hr_img
									)
				VALUES 				(
										#{hr_name}
										, #{hr_company}
										, #{tm_id}
										, #{hr_position}
										, #{hr_grade}
										, #{hr_email}
										, #{hr_mobile}
										, #{hr_hire_date}
										, CASE	WHEN #{hr_quit_date} IS NULL THEN NULL
												WHEN #{hr_quit_date} = '' THEN NULL
												ELSE #{hr_quit_date}
											END
										, CASE	WHEN #{hr_career_date} IS NULL THEN NULL
												WHEN #{hr_career_date} = '' THEN NULL
												ELSE #{hr_career_date}
											END
										, #{hr_upd}
										, #{hr_cwm_env}
										, #{hr_job_skill}
										, CASE	WHEN #{hr_nextpj_date} IS NULL THEN NULL
												WHEN #{hr_nextpj_date} = '' THEN NULL
												ELSE #{hr_nextpj_date}
											END
										, NOW()
										, #{hr_abc}
										, #{hr_residence}
										, #{hr_it_career}
										, #{hr_sqi_career}
										, #{hr_last_school}
										, #{hr_major}
										, #{hr_last_project}
										, #{hr_os}
										, #{hr_DB}
										, #{hr_ui}
										, #{hr_lang}
										, #{hr_fw}
										, #{hr_mw}
										, #{hr_domain}
										, #{hr_role}
										, #{hr_img}
									)
	</insert>
	
	<!-- insertEmployeeInfo - 2015.11.24 -->
	<insert id="insertEmployeeInfo" parameterType="com.sqisoft.iqs.humanResource.humanResource.vo.HumanResourceVO">
	INSERT	INTO human_resource	(
								  hr_name
										,hr_company
										,tm_id
										,hr_position
										,hr_grade
										,hr_email
										,hr_mobile
										,hr_hire_date
										,hr_quit_date
										,hr_career_date
										,hr_upd
										,hr_cwm_env
										,hr_job_skill
										,hr_nextpj_date
										,hr_LMD
										,hr_abc
										,hr_residence
										,hr_it_career
										,hr_sqi_career
										,hr_last_school
										,hr_major
										,hr_last_project
										,hr_os
										,hr_DB
										,hr_ui
										,hr_lang
										,hr_fw
										,hr_mw
										,hr_domain
										,hr_role
										,hr_img
									)
				VALUES (
									#{hr_name}
									, #{hr_company}
									, #{tm_id}
									, #{hr_position}
									, #{hr_grade}
									, #{hr_email}
									, #{hr_mobile}
									, #{hr_hire_date}
									, CASE	WHEN #{hr_quit_date} IS NULL THEN NULL
											WHEN #{hr_quit_date} = '' THEN NULL
											ELSE #{hr_quit_date}
									  END
									, CASE	WHEN #{hr_career_date} IS NULL THEN NULL
											WHEN #{hr_career_date} = '' THEN NULL
											ELSE #{hr_career_date}
									  END
									, #{hr_upd}
										, #{hr_cwm_env}
										, #{hr_job_skill}
										, CASE	WHEN #{hr_nextpj_date} IS NULL THEN NULL
												WHEN #{hr_nextpj_date} = '' THEN NULL
												ELSE #{hr_nextpj_date}
											END
										, NOW()
										, #{hr_abc}
										, #{hr_residence}
										, #{hr_it_career}
										, #{hr_sqi_career}
										, #{hr_last_school}
										, #{hr_major}
										, #{hr_last_project}
										, #{hr_os}
										, #{hr_DB}
										, #{hr_ui}
										, #{hr_lang}
										, #{hr_fw}
										, #{hr_mw}
										, #{hr_domain}
										, #{hr_role}
										, #{hr_img}
									)
	
	</insert>
	
	<insert		id="getOutHumanResourceDoInsertForm"	parameterType="com.sqisoft.iqs.humanResource.humanResource.vo.HumanResourceVO">
		INSERT	INTO human_resource	(
										hr_name
										,hr_company
										,tm_id
										,hr_position
										,hr_grade
										,hr_email
										,hr_mobile
										,hr_hire_date
										,hr_quit_date
										,hr_career_date
										,hr_uprice
										,hr_upd
										,hr_cwm_env
										,hr_job_skill
										,hr_nextpj_date
										,hr_LMD
										,hr_abc
										,hr_residence
										,hr_it_career
										,hr_sqi_career
										,hr_last_school
										,hr_major
										,hr_last_project
										,hr_os
										,hr_DB
										,hr_ui
										,hr_lang
										,hr_fw
										,hr_mw
										,hr_domain
										,hr_role
										,hr_img
									)
				VALUES 				(
										#{hr_name}
										, #{hr_company}
										, #{tm_id}
										, #{hr_position}
										, #{hr_grade}
										, #{hr_email}
										, #{hr_mobile}
										, #{hr_hire_date}
										, CASE	WHEN #{hr_quit_date} IS NULL THEN NULL
												WHEN #{hr_quit_date} = '' THEN NULL
												ELSE #{hr_quit_date}
											END
										, CASE	WHEN #{hr_career_date} IS NULL THEN NULL
												WHEN #{hr_career_date} = '' THEN NULL
												ELSE #{hr_career_date}
											END
										, #{hr_uprice}
										, #{hr_upd}
										, #{hr_cwm_env}
										, #{hr_job_skill}
										, CASE	WHEN #{hr_nextpj_date} IS NULL THEN NULL
												WHEN #{hr_nextpj_date} = '' THEN NULL
												ELSE #{hr_nextpj_date}
											END
										, NOW()
										, #{hr_abc}
										, #{hr_residence}
										, #{hr_it_career}
										, #{hr_sqi_career}
										, #{hr_last_school}
										, #{hr_major}
										, #{hr_last_project}
										, #{hr_os}
										, #{hr_DB}
										, #{hr_ui}
										, #{hr_lang}
										, #{hr_fw}
										, #{hr_mw}
										, #{hr_domain}
										, #{hr_role}
										, #{hr_img}
									)
	</insert>
	
	
	<insert		id="getInserAccount"	parameterType="com.sqisoft.iqs.humanResource.humanResource.vo.HumanResourceVO">
		INSERT	INTO	account(email, passwd, account)
		SELECT	h.hr_email, PASSWORD('iqsbiz'), 'n' 
		FROM	human_resource h
		LEFT	JOIN account a
		ON		h.hr_email = a.email
		WHERE	a.email IS NULL
		AND		h.hr_company LIKE concat ('%','SQI','%')
		AND		h.hr_name = #{hr_name}
	</insert>
	
	<!-- 팀별 직급단가  -->
	<update		id="getUpriceUpdate" parameterType="map">
		UPDATE	human_resource hr
		SET		hr.hr_uprice = (	SELECT	h.hp_mon_price
									FROM	hr_price h
									WHERE	h.hp_team = #{tm_id}
									AND		h.hp_position = #{hr_position}
							)
		WHERE	hr.hr_name = #{hr_name}
	</update>
	
	<!--  팀별 직급 단가 - 경영지원팀 -->
	<update id="getUpriceUpdate6M" parameterType="map">
		UPDATE	human_resource hr
		SET		hr.hr_uprice = (	SELECT	h.hp_mon_price
									FROM	hr_price h
									WHERE	h.hp_team = #{tm_id}
								)
		WHERE	hr.hr_name = #{hr_name}
	</update>
	
	<update		id="getUpdateAccount"	parameterType="com.sqisoft.iqs.humanResource.humanResource.vo.HumanResourceVO">
		UPDATE	account
		SET		passwd = PASSWORD('iqsbiz')
				, account =#{yns}
		WHERE	email = (select hr_email from human_resource where hr_name = #{hr_name})
	</update>

	<!-- 이욱진 추가 List로 받겠음 -->
	<select id="getJobSkillOptionsReturnList" resultType="string">
		SELECT	each_skill
		FROM	job_skill
		WHERE	business_division = '개발(CS/Web/M)'
	</select>
	
	
	<!-- select options -->
	<select		id="getTeamOptions" resultType="string">
		SELECT	tm_name 
		FROM	team
		WHERE	tm_year = year(now())
	</select>
	<select		id="getTeamIdOptions" resultType="string">
		SELECT	tm_id
		FROM	team
		WHERE	tm_year = year(now())
	</select>
	<select		id="getJobSkillOptions" resultType="string">
		SELECT	each_skill 
		FROM	job_skill
		ORDER BY business_division, each_skill
	</select>
	<select		id="getOsOptions" resultType="string">
		SELECT	each_environment 
		FROM	skill_env
		WHERE	environment_division = "OS"
	</select>
	<select		id="getDbOptions" resultType="string">
		SELECT	each_environment 
		FROM	skill_env
		WHERE	environment_division = "DB"
	</select>
	<select		id="getUiOptions" resultType="string">
		SELECT	each_environment 
		FROM	skill_env
		WHERE	environment_division = "UI"
	</select>
	<select		id="getLanguageOptions" resultType="string">
		SELECT	each_environment 
		FROM	skill_env
		WHERE	environment_division = "Language"
	</select>
	<select		id="getFrameWorkOptions" resultType="string">
		SELECT	each_environment 
		FROM	skill_env
		WHERE	environment_division = "Framework"
	</select>
	<select		id="getMiddleWareOptions" resultType="string">
		SELECT	each_environment 
		FROM	skill_env
		WHERE	environment_division = "MiddleWare"
	</select>
	<select		id="getDomainOptions" resultType="string">
		SELECT	each_domain 
		FROM	domain
	</select>
	<select		id="getRoleOptions" resultMap="roleMap">
		SELECT	role_id, each_role 
		FROM	role
	</select>
	<select id="getPositonOptionsKey" resultType="string">
		SELECT	hp_position
		FROM	hr_price
		GROUP	BY	hp_position
		ORDER	BY	hp_mon_price ASC
	</select>
	<select id="getPositonOptionsValue" resultType="string">
		SELECT	SUBSTR(hp_position, 2,3) hp_position
		FROM	hr_price
		GROUP	BY	hp_position
		ORDER	BY	hp_mon_price ASC
	</select>
	
	<!-- 151006 박정현 추가 -->
	<select id="getTeamName" resultType="string">
		SELECT	pj_name
		FROM	project
		WHERE	pj_id = #{pj_id}
	</select>
	
	<select id="getSamePersonCheckAjax" resultType="string">
		SELECT	COALESCE(hr_name)
		FROM	human_resource
		WHERE	hr_name = #{hr_name}
	</select>
	
	
	<update id="updateHrInfo" parameterType="com.sqisoft.iqs.humanResource.vo.HRPriceVO" >
		UPDATE	human_resource hr
		SET		hr.hr_uprice = (SELECT hp.hp_mon_price
								FROM	hr_price hp
								WHERE	hp.hp_team = (SELECT	hr.tm_id
													FROM	human_resource hr
													WHERE	
													<if test ="hp_team != '6M15'">
														hr.hr_position LIKE CONCAT('%', #{hp_position})
													</if>)
								)
	</update>
	
	
	
	<select id = "getHumanResourceInfo" parameterType="string" resultMap="humanResourceMap">
		SELECT		hr_img
		from		human_resource
		WHERE		hr_name = #{hr_name}
	</select>
	
</mapper>